{"version":3,"sources":["oknews.png","NewsRunner/NewsItem/NewsItem.js","NewsRunner/CategoriesView.js","NewsRunner/NewsRunner.js","AppHeader.js","AppFooter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ORIGIN_TO_IMG","ynet","mako","NewsItem","title","link","source","itemRef","useRef","imgRef","goToLink","useCallback","window","open","onRemove","e","stopPropagation","gsap","to","current","ease","opacity","height","scale","marginBottom","duration","className","ref","onClick","src","alt","CATEGORIES","id","url","label","CategoryButton","selectedCategories","selectCategory","category","isSelected","useMemo","find","c","CategoriesView","map","cat","key","NewsView","news","newsItem","slice","NewsRunner","settingsView","useState","setNews","setSelectedCategories","useEffect","a","async","Promise","all","flatten","axios","get","res","flattenResults","r","data","date","Date","publication_date","dateTimestamp","getTime","console","log","orderBy","error","getNews","selectedCats","filter","concat","from","stagger","each","y","view","DAYS","0","1","2","3","4","5","6","AppHeader","now","getDay","logo","AppFooter","setSettingsView","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e3296ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oknews.156bbe16.png\";","import React, {useCallback, useRef} from 'react';\nimport gsap from 'gsap';\n\nconst ORIGIN_TO_IMG = {\n\tynet: 'https://m.ynet.co.il/content/images/icons/site/big_ynet_logo.png?v=20200317',\n\tmako: 'https://img.mako.co.il/2013/08/15/mako-logo_i.jpg',\n};\nconst NewsItem = ({ title, link, source }) => {\n\tconst itemRef = useRef({});\n\tconst imgRef = useRef({});\n\n\tconst goToLink = useCallback(() => {\n\t\twindow.open(link, '_blank');\n\t}, [link]);\n\n\tconst onRemove = useCallback((e) => {\n\t\te.stopPropagation();\n\t\tgsap.to(imgRef.current, 1, {ease: 'power1.inOut', opacity: 0, height: 0, scale: 0.6, marginBottom: 0, duration: 2});\n\t\tgsap.to(itemRef.current, 1, {ease: 'power1.inOut', opacity: 0, height: 0, scale: 0.6, marginBottom: 0, duration: 2});\n\t}, [itemRef]);\n\treturn (\n\t\t<div className=\"news-item\" ref={itemRef} onClick={goToLink}>\n\t\t\t<img className={`news-source-img ${source}`} ref={imgRef} src={ORIGIN_TO_IMG[source]} alt={source} />\n\t\t\t<span className=\"text\">{title}</span>\n\t\t\t<span className=\"material-icons\" onClick={onRemove}>cancel</span>\n\t\t</div>\n\t);\n};\n\nexport default NewsItem;\n","import React, {useMemo, useCallback} from 'react';\nimport './category-view.scss';\n\nexport const CATEGORIES = [\n\t{\n\t\tid: 'news',\n\t\turl: ['/mako?cat=news', '/ynet?cat=news'],\n\t\tlabel: 'כללי',\n\t},\n\t{\n\t\tid: 'sport',\n\t\turl: ['/mako?cat=sport', '/ynet?cat=sports'],\n\t\tlabel: 'ספורט',\n\t},\n\t{\n\t\tid: 'tarbut',\n\t\turl: ['/mako?cat=tarbut'],\n\t\tlabel: 'תרבות',\n\t},\n\t{\n\t\tid: 'fashion',\n\t\turl: ['/mako?cat=fashion'],\n\t\tlabel: 'אופנה',\n\t},\n];\n\nconst CategoryButton = ({selectedCategories, selectCategory, category}) => {\n\tconst isSelected = useMemo(() => selectedCategories.find((c) => c.id === category.id), [category, selectedCategories]);\n\tconst onClick = useCallback(() => {\n\t\tselectCategory(category);\n\t}, [category, selectCategory]);\n\treturn (\n\t\t<div className={`category-btn ${isSelected ? 'selected' : ''}`} onClick={onClick}>\n\t\t\t<span className=\"material-icons\">{isSelected ? 'visibility' : 'visibility_off'}</span>\n\t\t\t{category.label}\n\t\t</div>\n\t);\n};\n\nconst CategoriesView = ({selectCategory, selectedCategories}) => {\n\n\treturn (\n\t\t<div className=\"categories-view\">\n\t\t\t{CATEGORIES.map((cat) => (\n\t\t\t\t<CategoryButton key={cat.id} category={cat} selectCategory={selectCategory} selectedCategories={selectedCategories} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default CategoriesView;\n","import React, { useEffect, useMemo, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport gsap from 'gsap';\nimport './news-runner.scss';\nimport { flatten, orderBy } from 'lodash';\nimport NewsItem from './NewsItem/NewsItem';\nimport CategoriesView, {CATEGORIES} from './CategoriesView';\n\nconst NewsView = ({news}) => (\n\tnews.map((newsItem) => (\n\t\t<NewsItem key={newsItem.id || newsItem.link.slice(50)} {...newsItem} />\n\t))\n);\n\nconst NewsRunner = ({settingsView}) => {\n\tconst [news, setNews] = useState([]);\n\tconst [selectedCategories, setSelectedCategories] = useState([CATEGORIES[0]]);\n\n\tuseEffect(() => {\n\t\tconst getNews = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await Promise.all(flatten(selectedCategories.map((cat) => cat.url.map((url) => axios.get(url)))));\n\t\t\t\tconst flattenResults = flatten(res.map((r) => r.data)).map(r => {\n\t\t\t\t\tconst date = new Date(r.publication_date);\n\t\t\t\t\treturn {...r, publication_date: date, dateTimestamp: date.getTime()};\n\t\t\t\t});\n\t\t\t\tconsole.log(flattenResults)\n\t\t\t\tsetNews(orderBy(flattenResults, ['dateTimestamp'] , ['desc']));\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t};\n\t\tif (settingsView === 'news') {\n\t\t\tgetNews();\n\t\t}\n\t}, [settingsView, selectedCategories]);\n\n\tconst selectCategory = useCallback((cat) => {\n\t\tsetSelectedCategories((selectedCats) => {\n\t\t\tconst existingCat = selectedCats.find((a) => a.id === cat.id);\n\t\t\tif (existingCat) {\n\t\t\t\treturn selectedCats.filter((a) => a.id !== cat.id);\n\t\t\t}\n\t\t\treturn selectedCats.concat(cat);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tgsap.from('.news-item', 1, {ease: 'power1.inOut', opacity: 0, scale: 0.6, duration: 2, stagger: {each: 0.1, y: -100}});\n\t}, [news]);\n\n\tconst view = useMemo(() => {\n\t\tswitch (settingsView) {\n\t\tcase 'news':\n\t\t\treturn <NewsView news={news} />;\n\t\tcase 'filters':\n\t\t\treturn <CategoriesView selectedCategories={selectedCategories} selectCategory={selectCategory} />;\n\t\tdefault:\n\t\t\treturn <NewsView news={news} />;\n\t\t}\n\t}, [settingsView, news, selectCategory, selectedCategories]);\n\n\treturn (\n\t\t<div className=\"news-runner\">\n\t\t\t<div className=\"news-runner-container\">\n\t\t\t\t<div className=\"runner-wrapper\">\n\t\t\t\t\t{view}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default NewsRunner;\n","import React from 'react';\nimport logo from './oknews.png';\n\nconst DAYS = {\n\t0: ' ראשון',\n\t1: ' שני',\n\t2: ' שלישי',\n\t3: ' רביעי',\n\t4: ' חמישי',\n\t5: ' שישי',\n\t6: ' שבת',\n};\nconst AppHeader = () => {\n\tconst now = new Date();\n\treturn (\n\t\t<div className=\"app-header\">\n\t\t\t<div className=\"date\">\n\t\t\t\tיום\n\t\t\t\t{`${DAYS[now.getDay()]}`}\n\t\t\t</div>\n\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\n\t\t\t<div className=\"desc\">כל החדשות המעניינות והרלוונטיות מהאתרים המובילים בישראל.</div>\n\t\t</div>\n\t);\n}\n\nexport default AppHeader;\n","import React from 'react';\n\n\nconst AppFooter = ({settingsView, setSettingsView}) => {\n\n\treturn (\n\t\t<div className=\"footer\">\n\t\t\t<div className=\"footer-relative\">\n\t\t\t\t<div className={`settings-button ${settingsView === 'news' ? 'selected' : ''}`} onClick={() => setSettingsView('news')}>\n\t\t\t\t\tחדשות\n\t\t\t\t</div>\n\t\t\t\t<div className={`settings-button ${settingsView === 'filters' ? 'selected' : ''}`} onClick={() => setSettingsView('filters')}>\n\t\t\t\t\tפילטר\n\t\t\t\t</div>\n\t\t\t\t<div className={`settings-button ${settingsView === 'contact' ? 'selected' : ''}`} onClick={() => setSettingsView('contact')}>\n\t\t\t\t\tצור קשר\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AppFooter;\n","import React, {useState} from 'react';\nimport NewsRunner from './NewsRunner/NewsRunner';\nimport './App.scss';\nimport './fonts/fonts.css';\nimport AppHeader from './AppHeader';\nimport AppFooter from './AppFooter';\n\nconst App = () => {\n\tconst [settingsView, setSettingsView] = useState('news');\n\treturn (\n\t\t<div className=\"news-page\">\n\t\t\t<AppHeader />\n\t\t\t<NewsRunner settingsView={settingsView} />\n\t\t\t<AppFooter settingsView={settingsView} setSettingsView={setSettingsView} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}