{"version":3,"sources":["oknews.png","NewsRunner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NewsItem","title","link","goToLink","useCallback","window","open","className","onClick","CATEGORIES","id","url","label","news","SPEEDS","INITIAL_CAT","NewsRunner","useState","setNews","scrollStartPos","setScrollStartPos","scrollEnd","setScrollEnd","settingsView","setSettingsView","selectedCategories","setSelectedCategories","newCategory","setNewCategory","scrollSpeed","setScrollSpeed","runnerNewsRef","useRef","useEffect","a","async","axios","get","res","all","changedCat","find","data","filter","concat","console","error","getMakoNews","current","scrollLeft","orderBy","flatten","map","s","n1","Date","publication_date","interval","setInterval","scrollTo","left","behavior","clearInterval","selectCategory","cat","selectedCats","changeSettingsView","src","logo","alt","ref","key","c","newsItem","slice","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c22c71a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oknews.156bbe16.png\";","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport './news-runner.css';\nimport { flatten, orderBy } from 'lodash';\nimport logo from './oknews.png';\n\nconst NewsItem = ({ title, link }) => {\n\tconst goToLink = useCallback(() => {\n\t\twindow.open(link, '_blank');\n\t}, [link]);\n\treturn (\n\t\t<div className=\"news-item\" onClick={goToLink}>{title}</div>\n\t);\n};\nconst CATEGORIES = [\n\t{\n\t\tid: 'news',\n\t\turl: '/mako_news',\n\t\tlabel: 'כללי',\n\t\tnews: [],\n\t},\n\t{\n\t\tid: 'sport',\n\t\turl: '/mako_sport',\n\t\tlabel: 'ספורט',\n\t\tnews: [],\n\t},\n\t{\n\t\tid: 'tarbut',\n\t\turl: '/mako_tarbut',\n\t\tlabel: 'תרבות',\n\t\tnews: [],\n\t},\n];\n\nconst SPEEDS = [\n\t4,\n\t6,\n\t8,\n\t10,\n];\n\nconst INITIAL_CAT = CATEGORIES[0];\nconst NewsRunner = () => {\n\tconst [news, setNews] = useState([]);\n\tconst [scrollStartPos, setScrollStartPos] = useState(0);\n\tconst [scrollEnd, setScrollEnd] = useState(false);\n\tconst [settingsView, setSettingsView] = useState(false);\n\tconst [selectedCategories, setSelectedCategories] = useState([INITIAL_CAT]);\n\tconst [newCategory, setNewCategory] = useState(INITIAL_CAT);\n\tconst [scrollSpeed, setScrollSpeed] = useState(SPEEDS[0]);\n\tconst runnerNewsRef = useRef({});\n\tuseEffect(() => {\n\t\tconst getMakoNews = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get(newCategory.url);\n\t\t\t\tsetSelectedCategories((all) => {\n\t\t\t\t\tconst changedCat = all.find((a) => a.id === newCategory.id);\n\t\t\t\t\tchangedCat.news = res.data;\n\t\t\t\t\treturn all.filter((a) => a.id !== newCategory.id).concat([changedCat]);\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t};\n\t\tgetMakoNews();\n\t}, [newCategory]);\n\tuseEffect(() => {\n\t\tif (runnerNewsRef.current) {\n\t\t\tsetScrollStartPos(runnerNewsRef.current.scrollLeft);\n\t\t}\n\t}, [runnerNewsRef.current]);\n\n\tuseEffect(() => {\n\t\tsetNews(orderBy(flatten(selectedCategories.map((s) => s.news)), (n1) => new Date(n1.publication_date), ['desc']));\n\t}, [selectedCategories]);\n\n\tuseEffect(() => {\n\t\tlet interval;\n\t\tconst doInterval = () => {\n\t\t\tinterval = setInterval(() => {\n\t\t\t\trunnerNewsRef.current.scrollTo({\n\t\t\t\t\tleft: runnerNewsRef.current.scrollLeft - (scrollSpeed),\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t});\n\t\t\t\tif (runnerNewsRef.current.scrollLeft - (scrollSpeed) <= 0) {\n\t\t\t\t\tsetScrollEnd(true);\n\t\t\t\t}\n\t\t\t}, 30);\n\t\t};\n\t\tif (runnerNewsRef.current) {\n\t\t\tdoInterval();\n\t\t}\n\t\treturn () => clearInterval(interval);\n\t}, [scrollSpeed, runnerNewsRef.current, settingsView]);\n\n\tuseEffect(() => {\n\t\tif (scrollEnd) {\n\t\t\trunnerNewsRef.current.scrollTo({\n\t\t\t\tleft: scrollStartPos,\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t}\n\t}, [scrollEnd, runnerNewsRef.current]);\n\n\tconst selectCategory = useCallback((cat) => {\n\t\tsetSelectedCategories((selectedCats) => {\n\t\t\tconst existingCat = selectedCats.find((a) => a.id === cat.id);\n\t\t\tif (existingCat) {\n\t\t\t\treturn selectedCats.filter((a) => a.id !== cat.id);\n\t\t\t}\n\t\t\tsetNewCategory(cat);\n\t\t\treturn selectedCats.concat(cat);\n\t\t});\n\t}, []);\n\tconst changeSettingsView = useCallback(() => {\n\t\tsetSettingsView((s) => !s);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"news-page\">\n\t\t\t<div className=\"center-container\">\n\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\n\t\t\t\t<div className=\"desc\">כל החדשות המעניינות והרלוונטיות מהאתרים המובילים בישראל. </div>\n\t\t\t\t<div className=\"news-runner\">\n\t\t\t\t\t<div className=\"news-runner-container\">\n\t\t\t\t\t\t<div ref={runnerNewsRef} className=\"runner-wrapper\">\n\t\t\t\t\t\t\t{settingsView ? (\n\t\t\t\t\t\t\t\t<div className=\"categories-container\">\n\t\t\t\t\t\t\t\t\t{CATEGORIES.map((cat) => (\n\t\t\t\t\t\t\t\t\t\t<div key={cat.id} className={`category-btn ${selectedCategories.find((c) => c.id === cat.id) ? 'selected' : ''}`} onClick={() => selectCategory(cat)}>{cat.label}</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tnews.map((newsItem) => (\n\t\t\t\t\t\t\t\t\t<NewsItem key={newsItem.link.slice(50)} title={newsItem.title} link={newsItem.link} />\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"speed-settings\">\n\n\t\t\t\tמהירות\n\t\t\t\t<span className={`speed-option ${scrollSpeed === SPEEDS[3] ? 'selected' : ''}`} onClick={() => setScrollSpeed(SPEEDS[3])}>8X</span>\n\t\t\t\t<span className={`speed-option ${scrollSpeed === SPEEDS[2] ? 'selected' : ''}`} onClick={() => setScrollSpeed(SPEEDS[2])}>4X</span>\n\t\t\t\t<span className={`speed-option ${scrollSpeed === SPEEDS[1] ? 'selected' : ''}`} onClick={() => setScrollSpeed(SPEEDS[1])}>2X</span>\n\t\t\t\t<span className={`speed-option ${scrollSpeed === SPEEDS[0] ? 'selected' : ''}`} onClick={() => setScrollSpeed(SPEEDS[0])}>1X</span>\n\t\t\t</div>\n\t\t\t<div className=\"footer\">\n\t\t\t\t<div className=\"footer-relative\">\n\t\t\t\t\t<div className=\"settings-button\" onClick={changeSettingsView}>\n\t\t\t\t\t\tהגדרות\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default NewsRunner;\n","import React from 'react';\nimport NewsRunner from './NewsRunner';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<NewsRunner />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}